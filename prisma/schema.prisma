generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Patient {
  id               Int       @id @default(autoincrement())
  name             String
  diseases         String
  allergies        String
  roomNumber       Int
  bedNumber        Int
  floorNumber      Int
  age              Int
  gender           String
  contactInfo      String
  emergencyContact String
  dietaryNotes     String?   // Optional additional details
  dietCharts       DietChart[] 
}

model DietChart {
  id          Int      @id @default(autoincrement())
  patientId   Int
  patient     Patient  @relation(fields: [patientId], references: [id], onDelete: Cascade)
  mealType    MealType
  ingredients String
  instructions String? // Optional instructions (e.g., "low salt")
  createdAt   DateTime @default(now())
  status TaskStatus @default(PENDING)
  pantryId     Int
  pantry       Staff    @relation(name: "name", fields: [pantryId], references: [id], onDelete: Cascade)
  delivaryId    Int
  delivary   Staff    @relation(name :"name2",fields: [delivaryId], references: [id], onDelete: Cascade)  
}

enum MealType {
  BREAKFAST
  LUNCH
  DINNER
}

model Staff {
  id          Int      @id @default(autoincrement())
  name        String
  role        String
  contactInfo String
  email       String   @unique
  password    String
  
  pantryTasks       DietChart[]@relation(name: "name")  
  deliveryTasks     DietChart[]@relation(name: "name2")
}

enum Role {
  admin
  pantry
  delivery
}



enum TaskStatus {
  PENDING
  COMPLETED
  DELIVERED
}
